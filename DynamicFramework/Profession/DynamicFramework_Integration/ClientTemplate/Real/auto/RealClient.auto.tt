<#@ template debug="false" hostspecific="True" language="C#" #>
<#@include file="$(SolutionDir)\Utils\TBUild.ttinclude" #>
<#@ output extension=".i" #>
<# 
	Init("T");
	//亲~~~~~~~ 如果上面的基本配置好了就不要改我了。
    foreach (Page item in pages)
    {
	  string DisplayName = item.Name; //文件名称
	  string DisplayLabel = item.Label; //文件中文表示 现在所有都是英文
	  string EntityName = DisplayName + EntitySuffix;
      if(string.IsNullOrEmpty(DisplayLabel)){ DisplayName="None"+Flag;}
	  NewFile(DisplayName+ClientSuffix+".auto.cs"); //生成文件名称定义
#>
using System;
using System.Collections.Generic;
using System.Linq;
using ClientTemplate.RealService;

namespace <#=ClientNameSpace#>
{
    /// <summary>
    /// [<#=DisplayLabel#>]客户端代理类
    /// </summary>
    public sealed partial class <#=DisplayName#><#=ClientSuffix#>
    {
        #region 单例模式

        private <#=DisplayName#><#=ClientSuffix#>() { }
    
        private static readonly object LockObj = new object();

        private static <#=DisplayName#><#=ClientSuffix#> _instance;

        /// <summary>
        /// 获得对象实例
        /// </summary>
        public static <#=DisplayName#><#=ClientSuffix#> Instance
        {
            get
            {
                lock (LockObj)
                {
                    if (_instance == null)
                    {
                        _instance = new <#=DisplayName#><#=ClientSuffix#>();
                    }
                    return _instance;
                }
            }
        }

        #endregion

        private RealSrv service = new RealSrv();

        #region 基础物理操作(增删改)
		/// <summary>
        /// 添加一条[<#=DisplayLabel#>]
        /// </summary>
        /// <param name="entity">[<#=DisplayLabel#>]实例</param>
        /// <returns>执行完成状态</returns>
        public bool Add(<#=EntityName#> entity)
        {
            return service.<#=DisplayName#>_Add(entity);
        }

        /// <summary>
        /// 更新一条[<#=DisplayLabel#>]
        /// </summary>
        /// <param name="entity">更新的[<#=DisplayLabel#>]实例</param>
        /// <returns>执行完成状态</returns>
        public bool Update(<#=EntityName#> entity)
        {
            return service.<#=DisplayName#>_Update(entity);
        }

        /// <summary>
        /// 删除一条[<#=DisplayLabel#>]
        /// </summary>
        /// <param name="entityID"></param>
        /// <returns>执行完成状态</returns>
        public bool Delete(string entityID)
        {
            return service.<#=DisplayName#>_Delete(entityID);
        }
		#endregion

		#region 查询操作
		/// <summary>
        /// 条件查询[<#=DisplayLabel#>]
        /// </summary>
        /// <param name="entity">[<#=DisplayLabel#>]筛选实例</param>
        /// <returns>[<#=DisplayLabel#>结果集</returns>
        public IList<<#=EntityName#>> Select(<#=EntityName#> entity)
        {
            return service.<#=DisplayName#>_Select(entity);
        }
        /// <summary>
        /// 条件查询排序
        /// </summary>
        /// <param name="entity">筛选实例</param>
        /// <param name="sortField">排序字段名</param>
        /// <param name="isDesc">是否倒序</param>
        /// <returns></returns>
		public IList<<#=EntityName#>> SelectForSort(<#=EntityName#> entity,string sortField, bool isDesc)
        {
            return service.<#=DisplayName#>_SelectForSort(entity,sortField,isDesc);
        }
		/// <summary>
        /// 条件查询分页[<#=DisplayLabel#>]
        /// </summary>
        /// <param name="entity">[<#=DisplayLabel#>]筛选实例</param>
        /// <param name="Skip">页数</param>
        /// <param name="Count">页条目数量</param>
        /// <returns>[<#=DisplayLabel#>结果集</returns>
        public IList<<#=EntityName#>> SelectForPage(<#=EntityName#> entity,int Skip,int Count)
        {
            return service.<#=DisplayName#>_SelectForPage(entity,Skip,Count);
        }
        /// <summary>
        /// 查询所有[<#=DisplayLabel#>]
        /// </summary>
        /// <returns></returns>
        public IList<<#=EntityName#>> Selects()
        {
            return service.<#=DisplayName#>_Selects();
        }
        /// <summary>
        /// 查询所有[<#=DisplayLabel#>]带排序
        /// </summary>
        /// <param name="sortField">排序列</param>
        /// <param name="isDesc">是否倒序</param>
        /// <returns></returns>
        public IList<<#=EntityName#>> SelectsForSort(string sortField,bool isDesc)
        {
            return service.<#=DisplayName#>_SelectsForSort(sortField,isDesc);
        }

        /// <summary>
        /// 查询所有[<#=DisplayLabel#>]分页
        /// </summary>
        /// <param name="Skip">页数</param>
        /// <param name="Count">页条目数量</param>
        /// <returns></returns>
        public IList<<#=EntityName#>> SelectsForPage(int Skip, int Count)
        {
            return service.<#=DisplayName#>_SelectsForPage(Skip,Count);
        }
		#endregion
    }
}
<#}EndFile();#>
